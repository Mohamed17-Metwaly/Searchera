// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace Searchera.Models;

public partial class JobListing
{
    public int Id { get; set; }
    [Required(ErrorMessage ="The Title is Required!")]
    [MaxLength(100,ErrorMessage = "This is Long Length")]
    [MinLength(10,ErrorMessage ="This is Small Length")]
    public string Title { get; set; }
    [Required(ErrorMessage ="The Requierment is Required!")]
    [MaxLength(100, ErrorMessage = "This is Long Length")]
    [MinLength(10, ErrorMessage = "This is Small Length")]
    public string Requirement { get; set; }
    [Required(ErrorMessage = "The Location is Required!")]
    [MaxLength(100, ErrorMessage = "This is Long Length")]
    [MinLength(10, ErrorMessage = "This is Small Length")]
    public string Locations { get; set; }
    [Required(ErrorMessage = "The Discription is Required!")]
    [MaxLength(100, ErrorMessage = "This is Long Length")]
    [MinLength(10, ErrorMessage = "This is Small Length")]
    public string Discription { get; set; }
    public string Status { get; set; }
    [NotMapped]
    [Required(ErrorMessage = "Choose The Status!")]
    public int StatusId { get; set; }
    public string JobType { get; set; }
    [NotMapped]
    [Required(ErrorMessage = "Choose The Status!")]
    public int? JobTypeId { get; set; }

    public DateTime? CreatedAt { get; set; }
    [Required(ErrorMessage = "The Expiry Date is Required!")]
    [DataType(DataType.Date)]
    public DateTime ExpiryDate { get; set; }
    [ForeignKey("User")]
    public int? UserId { get; set; }
    [ForeignKey("Company")]
    public int? CompanyID { get; set; }
    [Required(ErrorMessage = "The Salary Range Date is Required!")]
    public decimal SalaryRange { get; set; }

    public virtual ICollection<Application>? Applications { get; set; } = new List<Application>();

    public virtual Company? Company { get; set; }

    public virtual User? User { get; set; }
}